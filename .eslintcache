[{"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/index.js":"1","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/App.js":"2","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Header/Header.jsx":"3","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Search/Search.jsx":"4","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/ContentGrid.jsx":"5","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/NodesCard/NodesCard.jsx":"6","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/NodesCard/Nodes.jsx":"7","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/NodesDetailsCard.jsx":"8","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/SubscriptionsCard.jsx":"9"},{"size":262,"mtime":1684755351306,"results":"10","hashOfConfig":"11"},{"size":241,"mtime":1684761718061,"results":"12","hashOfConfig":"11"},{"size":703,"mtime":1684763538686,"results":"13","hashOfConfig":"11"},{"size":416,"mtime":1684760540880,"results":"14","hashOfConfig":"11"},{"size":1100,"mtime":1684765617086,"results":"15","hashOfConfig":"11"},{"size":438,"mtime":1684765640869,"results":"16","hashOfConfig":"11"},{"size":2184,"mtime":1684765267103,"results":"17","hashOfConfig":"11"},{"size":3007,"mtime":1684767141249,"results":"18","hashOfConfig":"11"},{"size":1361,"mtime":1684767642115,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bscndx",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/index.js",[],["41","42"],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/App.js",[],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Header/Header.jsx",[],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Search/Search.jsx",[],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/ContentGrid.jsx",[],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/NodesCard/NodesCard.jsx",[],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/NodesCard/Nodes.jsx",[],"/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/NodesDetailsCard.jsx",["43","44","45","46"],"import {\n  Box,\n  Button,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography\n} from '@mui/material'\n\nimport NotificationsIcon from '@mui/icons-material/Notifications'\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone'\nimport { useState } from 'react'\n\nconst NodesDetailsCard = props => {\n  const [attributes, setAttributes] = useState([])\n  const [subscribed, setSubscribed] = useState(false)\n\n  const subscribe = event => {\n    fetch('/subs/subscribe?id=' + props.nodeid + '&ns=' + props.namespace)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('http error ' + response.status)\n        }\n        return response.json()\n      })\n      .then(data => {\n        console.log(data)\n        setSubscribed(true)\n      })\n      .catch(err => console.log(err.message))\n  }\n\n  const unsubscribe = event => {\n    fetch('/subs/unsubscribe?id=' + props.nodeid + '&ns=' + props.namespace)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('http error ' + response.status)\n        }\n        return response.json()\n      })\n      .then(data => {\n        console.log(data)\n        setSubscribed(false)\n      })\n      .catch(err => console.log(err.message))\n  }\n\n  return (\n    <Card {...props}>\n      <Box\n        padding={1}\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n      >\n        <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">\n          {props.nodeid == -1 ? (\n            'No Node Selected'\n          ) : (\n            <div>{props.displayname}</div>\n          )}\n        </Typography>\n        {subscribed ? (\n          <Button onClick={unsubscribe}>\n            <NotificationsIcon />\n          </Button>\n        ) : (\n          <Button onClick={subscribe}>\n            <NotificationsNoneIcon />\n          </Button>\n        )}\n\n        <TableContainer>\n          <Table sx={{ minWidth: 400 }} aria-lable=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Атрибут</TableCell>\n                <TableCell align=\"right\">Значение</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {attributes.map(\n                attr =>\n                  attr[1] != '' && (\n                    <TableRow\n                      key={attr[0]}\n                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                    >\n                      <TableCell>{attr[0]}</TableCell>\n                      {/* {attr[0] == 'Value' ? (\n                        <ValueCell value={attr[1]} />\n                      ) : (\n                        <TableCell align=\"right\">{attr[1]}</TableCell>\n                      )} */}\n                    </TableRow>\n                  )\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Card>\n  )\n}\nexport default NodesDetailsCard\n","/Users/vpatsyuk/Desktop/Проекты/react-electron/src/components/Content/SubscriptionsCard.jsx",["47"],"import {\n  Box,\n  Card,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography\n} from '@mui/material'\n\nfunction SubscriptionRow() {\n  return (\n    <TableRow>\n      <TableCell>MyCosVariable</TableCell>\n      <TableCell>Double</TableCell>\n      <TableCell>-0.67826153</TableCell>\n      <TableCell>2023-05-22T22:23:46</TableCell>\n    </TableRow>\n  )\n}\n\nconst SubscriptionsCard = () => {\n  return (\n    <Card>\n      <CardContent>\n        <Box padding={1}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" align='center'>\n            Подписка на изменение\n          </Typography>\n          {/* <OpenLogDialog /> */}\n\n          <TableContainer>\n            <Table sx={{ minWidth: 800 }} aria-lable=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Название</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Значение</TableCell>\n                  <TableCell>Временная метка</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <SubscriptionRow />\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </CardContent>\n    </Card>\n  )\n}\nexport default SubscriptionsCard\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":19,"column":22,"nodeType":"54","messageId":"55","endLine":19,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":61,"column":25,"nodeType":"58","messageId":"59","endLine":61,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":78,"column":41,"nodeType":"62","endLine":78,"endColumn":66},{"ruleId":"56","severity":1,"message":"63","line":88,"column":27,"nodeType":"58","messageId":"59","endLine":88,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":36,"column":43,"nodeType":"62","endLine":36,"endColumn":68},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'setAttributes' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/aria-props","aria-lable: This attribute is an invalid ARIA attribute. Did you mean to use aria-label?","JSXAttribute","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]